{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jboyd\\\\OneDrive\\\\Documents\\\\GitHub\\\\literate-system\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LogTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      logText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    const storedLogs = localStorage.getItem('logs');\n    if (storedLogs) {\n      this.setState({\n        logs: JSON.parse(storedLogs)\n      });\n    } else {\n      localStorage.setItem('logs', JSON.stringify([]));\n    }\n  }\n  handleChange(event) {\n    this.setState({\n      logText: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const newLog = {\n      text: this.state.logText,\n      date: new Date().toLocaleString()\n    };\n    const updatedLogs = [...this.state.logs, newLog];\n    localStorage.setItem('logs', JSON.stringify(updatedLogs));\n    this.setState({\n      logs: updatedLogs,\n      logText: ''\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Migraine log:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.logText,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: log.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LogTable;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","LogTable","constructor","props","state","logs","logText","handleChange","bind","handleSubmit","componentDidMount","storedLogs","localStorage","getItem","setState","JSON","parse","setItem","stringify","event","target","value","preventDefault","newLog","text","date","Date","toLocaleString","updatedLogs","render","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index"],"sources":["C:/Users/jboyd/OneDrive/Documents/GitHub/literate-system/my-app/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass LogTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      logText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const storedLogs = localStorage.getItem('logs');\n    if (storedLogs) {\n      this.setState({ logs: JSON.parse(storedLogs) });\n    } else {\n      localStorage.setItem('logs', JSON.stringify([]));\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ logText: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const newLog = {\n      text: this.state.logText,\n      date: new Date().toLocaleString()\n    };\n    const updatedLogs = [...this.state.logs, newLog];\n    localStorage.setItem('logs', JSON.stringify(updatedLogs));\n    this.setState({ logs: updatedLogs, logText: '' });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Migraine log:\n            <input type=\"text\" value={this.state.logText} onChange={this.handleChange} />\n          </label>\n          <button type=\"submit\">Add</button>\n        </form>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Log</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.logs.map((log, index) => (\n              <tr key={index}>\n                <td>{log.date}</td>\n                <td>{log.text}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default LogTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}